// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rusell.Clients.Shared.Infrastructure.Persistence.EntityFramework;

#nullable disable

namespace Rusell.Clients.Migrations
{
    [DbContext(typeof(ClientsDbContext))]
    [Migration("20220118213016_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rusell.Clients.Domain.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_clients");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Rusell.Clients.Domain.Client", b =>
                {
                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.FirstName", "FirstName", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(64)
                                .HasColumnType("character varying(64)")
                                .HasColumnName("first_name");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.FirstSurname", "FirstSurname", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(64)
                                .HasColumnType("character varying(64)")
                                .HasColumnName("first_surname");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.MiddleName", "MiddleName", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(64)
                                .HasColumnType("character varying(64)")
                                .HasColumnName("middle_name");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("phone_number");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.SecondSurname", "SecondSurname", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(64)
                                .HasColumnType("character varying(64)")
                                .HasColumnName("second_surname");

                            b1.HasKey("ClientId");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.OwnsOne("Rusell.Shared.Domain.ValueObject.UserId", "UserId", b1 =>
                        {
                            b1.Property<string>("ClientId")
                                .HasColumnType("text")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .HasMaxLength(256)
                                .HasColumnType("character varying(256)")
                                .HasColumnName("user_id");

                            b1.HasKey("ClientId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("ix_clients_user_id");

                            b1.ToTable("clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId")
                                .HasConstraintName("fk_clients_clients_id");
                        });

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("FirstSurname")
                        .IsRequired();

                    b.Navigation("MiddleName")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();

                    b.Navigation("SecondSurname")
                        .IsRequired();

                    b.Navigation("UserId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
